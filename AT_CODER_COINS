#include<bits/stdc++.h>
using namespace std;
double maxheads(int ind,int c,int n,vector<double>&coins,vector<vector<double>>&dp)
{
    if(ind==n) return 1.0;
    
    if(dp[ind][c]!=-1.0)return dp[ind][c];
    
    double p=0.0,np=0.0;
    
    p=coins[ind]*maxheads(ind+1,c,n,coins,dp);
    
    if(c>0)np=(1-coins[ind])*maxheads(ind+1,c-1,n,coins,dp);
    
    return dp[ind][c]=p+np;
}
int main()
{
    int n;
    cin>>n;
    vector<double>coins(n);
    for(int i=0;i<n;i++) cin>>coins[i];
    int c=n/2;
    vector<vector<double>>dp(n+1,vector<double>(n+1,-1.0));
    cout<<setprecision(12)<<maxheads(0,c,n,coins,dp);

    
    
}
